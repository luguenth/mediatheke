/* tiled background repeat */
.hero {
    --max-amplitude: 5px;  // Maximum distance element will move during wobble
    --degree: 5deg;  // Maximum rotation element will move during wobble
    width: 100%;
    height: 400px;
    margin-top: 40px;
    padding-top: 50px;
    background-image: url('/assets/hero/tile.svg');
    background-repeat: repeat;

    font-size: 2rem;
    text-transform: lowercase;

    overflow: hidden;
    display: flex; // To arrange child divs horizontally

  // Nested styles for the child divs
  .float {
        display: flex;   // Use flex for inner positioning
        font-size: 2em;   // Larger font size for better visibility
        position: relative;
        // Adjust the spacing between the text and the SVG image
        span {
            margin-right: 0.5em;   // Space between text and image
            z-index: 100;
        }

        img {
            height: auto;   // Keep aspect ratio of the images#
            position: absolute;
        }
    }

    .media {
        left: 9%;
        top: 16%;

        img {
            width: 330px;
            left: 100px;
            top: -110px;
        }
    }

    .theke {
        left: 33%;
        top: 41%;

        img {
            width: 513px;
            left: -190px;
            top: -153px;
        }
    }
}


.media img, .theke img {
    animation: wobble 30s infinite ease-in-out; 
    /* Using 'infinite' to make the animation loop forever. 
       2s duration for a slow, subtle effect, and 'ease-in-out' for smooth timing. */
  }
/* Define a wobble animation to simulate the hovering effect */
@keyframes wobble {
    0% {
      transform: translate(0, 0) rotate(0);
    }
    25% {
      transform: translate(calc(var(--max-amplitude) * -1), var(--max-amplitude)) rotate(var(--degree));
    }
    50% {
      transform: translate(var(--max-amplitude), calc(var(--max-amplitude) * -1)) rotate(calc(var(--degree) * -1)); 
    }
    75% {
      transform: translate(calc(var(--max-amplitude) * -0.5), calc(var(--max-amplitude) * 0.5)) rotate(0);
    }
    100% {
      transform: translate(calc(var(--max-amplitude) * 0.5), calc(var(--max-amplitude) * -0.5)) rotate(0);
    }
  }
  